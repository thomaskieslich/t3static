#!/bin/bash

# Check and load .env
loadEnv() {
    # Check for .env file existence, if not make a copy from .env.dist
    if [ ! -f "${BASH_SOURCE%/*}"/.env ]; then
        cp "${BASH_SOURCE%/*}"/.env.dist "${BASH_SOURCE%/*}"/.env
        echo 'custom .env not found. copy .env.dist to .env'
    fi

    # Load environment and set up paths
    source "${BASH_SOURCE%/*}/.env"

    # Check if TEST_PATH is set and valid
    if [ -z "${TEST_PATH}" ]; then
        echo "ERROR: TEST_PATH is not set in .env"
        exit 1
    fi

    if [ ! -d "${TEST_PATH}" ]; then
        echo "ERROR: TEST_PATH directory does not exist: ${TEST_PATH}"
        exit 1
    fi

    echo "Local .env loaded."

}

# Install packages locally only if vendor or node_modules don't exist
installPackages() {

    # Check and install composer dependencies
    if [ ! -d "${TEST_PATH}/vendor" ]; then
        echo "Installing composer packages..."
        rm -f "${TEST_PATH}/composer.lock"
        composer install --no-progress --no-interaction --working-dir="${TEST_PATH}"
    else
        echo "Composer packages already installed, skipping"
    fi

    # Check and install npm dependencies
    if [ ! -d "${TEST_PATH}/node_modules" ]; then
        echo "Installing npm packages..."
        rm -f "${TEST_PATH}/package-lock.json"
        npm install --quiet --prefix="${TEST_PATH}"
    else
        echo "NPM packages already installed, skipping"
    fi
}

echo 'Bash Source:' ${BASH_SOURCE%/*}

loadEnv
installPackages

# Run t3static with all passed arguments
pwd
echo 'Bash Source:' ${BASH_SOURCE%/*}
echo 'TEST_PATH' ${TEST_PATH}

# Run t3static with all passed arguments
exec "${BASH_SOURCE%/*}/t3static" "$@"
