#!/bin/bash
set -euo pipefail

# Get script directory reliably
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${SCRIPT_DIR}/includes/run-common.sh"

loadEnv "${SCRIPT_DIR}"

# Handle --rebuild option
if [[ $# -gt 0 && "$1" == "--rebuild" ]]; then
    echo "Remove Tools and rebuild..."
    rm -rf "${TEST_PATH}/vendor"
    rm -rf "${TEST_PATH}/node_modules"
fi

checkPackages() {
    installRequired=false

    # Check for required commands
    if ! command -v composer &>/dev/null; then
        echo "ERROR: composer is not installed"
        exit 1
    fi
    if ! command -v npm &>/dev/null; then
        echo "ERROR: npm is not installed"
        exit 1
    fi

    # Check and install composer dependencies
    if [ ! -d "${TEST_PATH}/vendor" ]; then
        installRequired=true
    fi

    # Check and install npm dependencies
    if [ ! -d "${TEST_PATH}/node_modules" ]; then
        installRequired=true
    fi

    # Install packages if required
    if [ "$installRequired" = true ]; then
        installPackages
    fi
}

installPackages() {
    # Install composer packages
    echo "Installing composer packages..."
    rm -f "${TEST_PATH}/composer.lock"
    composer install --no-progress --no-interaction --working-dir="${TEST_PATH}"

    # Check and install npm dependencies
    echo "Installing npm packages..."
    rm -f "${TEST_PATH}/package-lock.json"
    npm install --quiet --prefix="${TEST_PATH}"
}

checkPackages

# Validate t3static exists and is executable
if [ ! -x "${SCRIPT_DIR}/t3static" ]; then
    echo "ERROR: t3static not found or not executable at ${SCRIPT_DIR}/t3static"
    exit 1
fi

# Run t3static with all passed arguments
exec "${SCRIPT_DIR}/t3static" "$@"
